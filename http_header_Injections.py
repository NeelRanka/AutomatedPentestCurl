import os
import re

import utility
import json

allowed = {
			'0': 1, '1': 1, '2': 1, '3': 1, '4': 1, '5': 1, '6': 1, '7': 1, '8': 1, '9': 1,
			'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1, 'f': 1, 'g': 1, 'h': 1, 'i': 1, 'j': 1,
			'k': 1, 'l': 1, 'm': 1, 'n': 1, 'o': 1, 'p': 1, 'q': 1, 'r': 1, 's': 1, 't': 1,
			'u': 1, 'v': 1, 'w': 1, 'x': 1, 'y': 1, 'z': 1, 'A': 1, 'B': 1, 'C': 1, 'D': 1,
			'E': 1, 'F': 1, 'G': 1, 'H': 1, 'I': 1, 'J': 1, 'K': 1, 'L': 1, 'M': 1, 'N': 1,
			'O': 1, 'P': 1, 'Q': 1, 'R': 1, 'S': 1, 'T': 1, 'U': 1, 'V': 1, 'W': 1, 'X': 1,
			'Y': 1, 'Z': 1, '!': 1, '@': 1, '#': 1, '$': 1, '%': 1, '^': 1, '*': 1, '-': 1,
			'_': 1, '=': 1, '+': 1, ':': 1, ';': 1, ',': 1, '.': 1, '/': 1, '?': 1, '~': 1
			}

def insertPayload(cmd,payload,SEsets):
	oriCMD = cmd
	payload = escapeSpChars(payload)
	try:
		for start,end in SEsets:
			cmd = cmd[:start] + payload + cmd[end+1:]
	except Exception as error:
		print("some error occured in adding the payload",error)
		return(oriCMD)
	return(cmd)


def getPayloadPosition(string):
	start=-1
	end=-1
	flag=0
	pos=[]
	index=0
	while index < len(string)-1:
		if string[index] == "$":
			if string[index+1] == "$":
				if flag==0:
					start = index
					flag=1
					index+=1
				elif flag==1:
					end = index+1
					flag=0
					pos.append([start,end])
					start=-1
					end=-1
		index+=1
	return(pos)


def makeAndAddJSON(payloadedCurl,out_filename,payload):
	try:
		file = open("./Results/"+str(out_filename)+".txt")
		opFile = open("./Results/"+str(out_filename)+".json","a")
		json.dump({
			"request":payloadedCurl,
			"payload":payload,
			"response":file.read()
			},opFile)
		opFile.write(",")
		
		file.close()
		opFile.close()
	except Exception as error:
		print("An error occured while adding data to JSON : ",error)



def escapeSpChars(string):
	temp=""
	for char in range(0,len(string)):
		if string[char] not in allowed:
			temp+='\\'
		temp+=string[char]
	return(temp)

def curl_req(payloadedCurl ,payload, out_filename ):

	payloadedCurl = payloadedCurl
	#print(payloadedCurl)
	opFile = open("curls.sh","w")
	opFile.write(payloadedCurl)
	opFile.close()
	op = os.popen("bash curls.sh > ./Results/"+str(out_filename)+".txt").read()
	print("op : \n",op)
	makeAndAddJSON(payloadedCurl,out_filename,payload)


def driver_code_http(file_name ,out_filename):
	file = open(file_name)
	cmd=""
	print("driver_code_http called")

	for line in file:
		# print("#"*100)
		if "###" in line:
			if cmd !="":
				if "curl" in cmd :
					try:	
						
						positions = getPayloadPosition(cmd)
						for payload in payloads:
							cmd = insertPayload(cmd,'',positions)
							
							reverse_curl=cmd[::-1]
							temp_len=reverse_curl.find("$")
							r_len=len(cmd)-temp_len-1
							payload=escapeSpChars(payload)
							if cmd.find("X-Forwarded-Host")==-1:
								
								payloadedCurl=cmd[:r_len]+" -H $'X-Forwarded-Host: "+ payload +"\' " +cmd[r_len:]
								print(payloadedCurl)
								curl_req(payloadedCurl ,payload, out_filename)

							if cmd.find("X-HTTP-Host-Override")==-1:
								
								payloadedCurl=cmd[:r_len]+" -H $'X-HTTP-Host-Override: "+ payload +"\' "+cmd[r_len:]
								print(payloadedCurl)
								curl_req(payloadedCurl ,payload, out_filename)

							if cmd.find("Referer")==-1:
								
								payloadedCurl=cmd[:r_len]+" -H $'Referer: "+ payload +"\' "+cmd[r_len:]
								
								print(payloadedCurl)
								curl_req(payloadedCurl ,payload, out_filename)
							elif cmd.find("Referer")>=0:
								index= cmd.find("Referer")
								indx=index+6
								print(index)
								for i in range(index+6, len(cmd)):
									if cmd[i]=="'":
										break
									indx=indx+1
								payloadedCurl=cmd[:index+7]+': '+payload+cmd[indx:]
								print(payloadedCurl)
								curl_req(payloadedCurl, payload ,out_filename)
								
							if cmd.find('Origin')==-1:
								payloadedCurl=cmd+" -H $'Origin: "+ payload +"\' "
								
								curl_req(payloadedCurl ,payload, out_filename)
							
							elif cmd.find("Origin")>=0:
								index= cmd.find("Origin")
								indx=index+6
								print(index)
								for i in range(index+6, len(cmd)):
									if cmd[i]=="'":
										break
									indx=indx+1
								payloadedCurl=cmd[:index+6]+': '+payload+cmd[indx:]
								print(payloadedCurl)
								curl_req(payloadedCurl, payload ,out_filename)

							if cmd.find("Origin")>=0:
								index= cmd.find("Origin")
								indx=index+6
								print(index)
								for i in range(index+6, len(cmd)):
									if cmd[i]=="'":
										break
									indx=indx+1
								payloadedCurl=cmd[:indx-1]+', '+payload+cmd[indx:]
								print(payloadedCurl)
								curl_req(payloadedCurl, payload ,out_filename)

							if cmd.find("Host")==-1:
								payloadedCurl=cmd[:r_len]+" -H $'Host:"+ payload +"' "+cmd[r_len:]
								print(payloadedCurl)
								curl_req(payloadedCurl ,payload, out_filename)
							elif cmd.find("Host")>=0:
								
								index= cmd.find("Host")
								indx=index+4
								print(index)
								for i in range(index+4, len(cmd)):
									if cmd[i]=="'":
										break
									indx=indx+1
								payloadedCurl=cmd[:index+4]+': '+payload+cmd[indx:]
								print(payloadedCurl)
								
								
								curl_req(payloadedCurl, payload ,out_filename)
							
							if cmd.find("Host")>=0:
								
								index= cmd.find("Host")
								indx=index+4
								print(index)
								for i in range(index+4, len(cmd)):
									if cmd[i]=="'":
										break
									indx=indx+1
								payloadedCurl=cmd[:indx-1]+', '+payload+cmd[indx:]
								print(payloadedCurl)
								curl_req(payloadedCurl, payload ,out_filename)

							if cmd.find("User-Agent")>=0:
								
								index= cmd.find("User-Agent")
								indx=index+10
								print(index)
								for i in range(index+10, len(cmd)):
									if cmd[i]=="'":
										break
									indx=indx+1
								payloadedCurl=cmd[:indx-1]+', '+payload+cmd[indx:]
								print(payloadedCurl)
								curl_req(payloadedCurl, payload ,out_filename)		
							
							if cmd.find("User-Agent")>=0:
								
								index= cmd.find("User-Agent")
								indx=index+10
								print(index)
								for i in range(index+10, len(cmd)):
									if cmd[i]=="'":
										break
									indx=indx+1
								payloadedCurl=cmd[:index+10]+': '+payload+cmd[indx:]
								print(payloadedCurl)
								curl_req(payloadedCurl, payload ,out_filename)
							
					except Exception as e:
						print("\n[*] Error occured :: ",e,"\n=>",payloadedCurl,"\n\n")		
			cmd = ""
		else:
			# print("line : ",line.strip("\\\n"))
			cmd+=line.strip("\\\n")

	file.close()

def Attack_http(file_name ,attackID, out_filename, payloadFile):
	global payloads
	if not os.path.isfile(file_name):
		print("File not found")
		return()

	if payloadFile == None or not os.path.isfile(payloadFile):
		return()

	# ******** check for payload File size and how much can the payload list actually hold
	payloads = []
	file = open(payloadFile)
	# for line in file:
	# 	payloads.append(line.strip("\n"))
	payloads = file.read().split("\n###\n")
	file.close()

	if not utility.isValidExt(file_name):
		print("invalid filename!")
		return()
		
	f_size=os.path.getsize(file_name)
	if f_size!=0:
		driver_code_http(file_name , out_filename)
		OKFlag = utility.changeStatus(attackID,utility.completed)
		if not OKFlag:
			return("The process has been completed but status code might have an error")
	print("\n\n[+] Attack Completed and File saved "+out_filename)