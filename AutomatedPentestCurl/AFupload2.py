import utility
import json

# def makreq(payloadedCurl,uniqueCode,out_filename):
# 	opFile = open("./tempCurls/curls_"+ uniqueCode +".sh","w")
# 	opFile.write(payloadedCurl)
# 	opFile.close()
# 	print('\nmaking request ==>',payloadedCurl)
# 	op = os.popen("bash ./tempCurls/curls_"+ uniqueCode +".sh > ./Results/"+str(out_filename)+".txt").read()


# def makeAndAddJSON(payloadedCurl,out_filename,payload):
# 	try:
# 		filee = open("./Results/"+str(out_filename)+".txt")
# 		opFile = open("./Results/"+str(out_filename)+".json","a")
# 		json.dump({
# 			"request":payloadedCurl,
# 			"payload":payload,
# 			"response":filee.read()
# 			},opFile)
# 		opFile.write(",")
# 		filee.close()
# 		opFile.close()

# 	except Exception as error:
# 		print("An error occured while adding data to JSON : ",error)

def fetchValuesFromFile(fileName):
	file = open(fileName)
	payloads = file.read().split("\n###\n")
	file.close()
	return(payloads)


def getPayloadPosition(string):
	start=0
	end=-1
	flag=0
	pos=[]
	index=0
	while index < len(string)-2:
		if string[index] == "$":
			if string[index+1] == "$" and string[index+2]== "$":
				if flag==1:
					start = index + 2
					flag=0
					index+=1
				elif flag==0:
					end = index
					flag=1
					pos.append([start,end])
					start=-1
					end=-1
		index+=1
	print(pos)
	pos.append([start,None]) # to go from last pos to end of string
	return(pos)


def AFCode(file_name, AttackID, payloadFile, out_filename):
	print("starting AFCode",file_name,out_filename)
	payloads = fetchValuesFromFile(payloadFile)
	print(payloads)
	file = open(file_name)
	cmd=""
	status = None
	uniqueCode=AttackID.split('-')[0]
	for line in file:
		print(line)
		if "###" in line:
			if cmd !="":
				if "curl" in cmd :
					try:
						print("***trying")
						status = AFupload(cmd,payloads,AttackID,out_filename) 
						break

					except Exception as error:
						print("[-] some error occured in AFUpload :: ",error)
						return(False)


			cmd = ""
		
		else:
			cmd+=line.strip("\\\n")
	
	file.close()
	utility.removeTempFile("./tempCurls/curls_"+ uniqueCode +".sh")
	OKFlag = utility.changeStatus(AttackID,utility.completed)
	
	if not OKFlag:
		return("The process has been completed but status code might have an error")
	print("\n\n[+] Attack Completed and File saved "+out_filename)
	if status == None:
		print("No Delim Found (Maybe)")
		return(False)
	return(status)


#returns status
# def AFupload(curl, payloads, AttackID, out_filename):
# 	input("in AFCode")
# 	uniqueCode = AttackID.split("-")[0]
# 	positions = getPayloadPosition(curl)
# 	print(positions)
# 	if len(positions) != len(payloads):
# 		return(False)

# 	newCurl = curl[0]
# 	for (start,end),payload in zip(positions,payloads):
# 		newCurl+=curl[start+1:end] + payload
# 	print("==>> ",newCurl)
# 	utility.makeReq(newCurl,uniqueCode,out_filename)
# 	utility.makeAndAddJSON(newCurl,out_filename,"ACTUAL_FILE_CONTENTS")

# 	return(True)